{"version":3,"sources":["assets/mandal-otani.png","assets/icon/puzzle.svg","assets/mandal.png","assets/nothing.jpeg","serviceWorker.js","pages/home/Home.js","pages/auth/Login.js","pages/auth/Logout.js","components/header/Nav.js","components/header/Header.js","pages/guide/Guide.js","components/mandal/Table.js","components/mandal/Title.js","components/button/Save.js","pages/mandal/write/Write.js","components/button/Print.js","components/button/Edit.js","components/button/Delete.js","pages/mandal/detail/Detail.js","components/mandal/List.js","pages/mandal/list/ListContainer.js","redux/actions/index.js","App.js","firebaseApp.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Home","className","to","src","require","Component","Login","props","onLogin","firebase","setPersistence","Auth","Persistence","LOCAL","then","provider","GoogleAuthProvider","signInWithPopup","authData","setState","user","JSON","stringify","catch","error","console","log","reload","state","localStorage","getItem","this","nextProps","nextState","nextContext","setItem","Logout","onLogout","e","preventDefault","signOut","removeItem","href","Nav","setTimeout","userInfo","photoURL","displayName","email","onClick","Header","onNav","prevState","isNav","parse","Guide","Table","onChange","tableIndex","dataIndex","goal","value","target","data","setIn","tableChange","onPlaceholder","map","table","key","join","placeholder","maxLength","Title","title","titleChange","type","Save","useState","setData","setTitle","useEffect","uid","database","time","Date","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","ref","push","history","go","Write","List","Print","print","Edit","once","snapshot","obj","val","keyList","hasOwnProperty","pageNo","update","Delete","remove","Detail","dataList","params","id","fromJS","index","ListContainer","list","arr","length","initialState","handleActions","action","store","createStore","reducers","App","basename","process","exact","path","component","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.819e46eb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mandal-otani.f4832b03.png\";","module.exports = __webpack_public_path__ + \"static/media/puzzle.bfeb0da3.svg\";","module.exports = __webpack_public_path__ + \"static/media/mandal.8169e27a.png\";","module.exports = __webpack_public_path__ + \"static/media/nothing.d4ff3ff1.jpeg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport '../../css/layout/Home.scss';\n\nclass Home extends Component {\n    render() {\n        return (\n            <section className=\"home-section\">\n                <div className=\"h-100 container flex flex-col justify-center mb-200\">\n                    <div className=\"font-xl font-white mb-50\">\n                        함께, <span className=\"yellow\">계획</span>을 세워요<br/>\n                        지금 바로 시작하세요\n                    </div>\n                    <Link to=\"/guide\">\n                        <button className=\"btn write\">시작하기</button>\n                    </Link>\n                </div>\n                <div className=\"h-100 container flex flex-col items-center justify-center\">\n                    <div className=\" flex flex-col-m justify-between items-center\">\n                        <>\n                            <img className=\"mandal-img shadow mr-50\"\n                                 src={require('../../assets/mandal-otani.png')}/>\n                        </>\n                        <div>\n                            <div className=\"py-1 border-bottom\">\n                                <div className=\"inline-block text-center box-title bg-blue font-bold yellow mb-20\">\n                                    만다라트란?\n                                </div>\n                                <p className=\"font-light\">\n                                    만다라트(Mandal-Art) 기법은 일본의 '이마이즈미 히로아키'가 구상했습니다.<br/>\n                                    Manda(본질의 깨달음)+la(성취)+art(기술)의 합성어로 '목적을 달성하는 기술'을 뜻합니다.<br/>\n                                    핵심목표를 세우고 이에 대한 해결점, 아이디어, 생각들을 확산해 나가는 형태로, <span className=\"font-bold\">목표를 계획하거나 아이디어를 구체화</span> 할\n                                    때 아주 유용하게 활용할 수\n                                    있습니다.\n                                </p>\n                            </div>\n\n                            <div className=\"py-1\">\n                                <div className=\"inline-block text-center bg-blue box-title font-bold yellow mb-20\">\n                                    대표적인 사례\n                                </div>\n                                <p className=\"font-light\">\n                                    만다라트는 <span className=\"font-bold\">'오타니 쇼헤이'의 성공비법</span>으로 잘 알려져있습니다.<br/>\n                                    '오타니 쇼헤이'는 철저한 자기관리로 가장 영향력있는 인물 100인, TOP5으로 선정된 인물입니다.<br/>\n                                    '오타니 쇼헤이'는 고교시절에 쓴 만다라트를 꾸준히 실천하여, 지금의 자리까지 올 수 있었습니다.<br/>\n                                </p>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </section>\n        )\n    }\n}\n\nexport default Home;","import React, {Component} from 'react';\nimport * as firebase from \"firebase\";\n\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state= {\n            user: localStorage.getItem('logInfo')\n        };\n    }\n\n    componentDidMount() {\n        this.onLogin();\n    }\n\n    onLogin = () => {\n        firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL).then(() => {\n            var provider = new firebase.auth.GoogleAuthProvider();\n            return firebase.auth().signInWithPopup(provider).then((authData) => {\n                this.setState({\n                    user: JSON.stringify(authData)\n                });\n            });\n        }).catch((error) => {\n            console.log(error);\n        });\n\n        window.location.reload();\n    }\n\n    componentWillUpdate(nextProps, nextState, nextContext) {\n        localStorage.setItem('logInfo', nextState.user);\n    }\n\n}\n\n\nexport default Login;\n\n","import React, {Component} from 'react';\nimport * as firebase from \"firebase\";\n\n\nclass Logout extends Component {\n    constructor(props) {\n        super(props);\n    }\n    componentDidMount() {\n        this.onLogout();\n    }\n\n    onLogout = (e) => {\n        e.preventDefault();\n\n        firebase.auth().signOut().then(() => {\n            localStorage.removeItem('logInfo');\n\n        }).catch(function (error) {\n            console.log(error);\n        });\n\n        window.location.href = '/';\n    }\n}\n\n\nexport default Logout;\n\n","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport * as firebase from \"firebase\";\n\nclass Nav extends Component {\n\n    onLogout = (e) => {\n        e.preventDefault();\n\n        firebase.auth().signOut().then(() => {\n            localStorage.removeItem('logInfo');\n        }).catch(function (error) {\n            console.log(error);\n        });\n        setTimeout(()=>{window.location.href = '/';},1000);\n    }\n\n    render() {\n        return (\n            <div className=\"nav\">\n                <div className=\"nav-container border-bottom\">\n                    <img className=\"nav-profile-img mb-20\" src={this.props.userInfo.photoURL}/>\n                    <div className=\"mb-5 font-medium\">{this.props.userInfo.displayName}</div>\n                    <div className=\"font-sm\">{this.props.userInfo.email}</div>\n                </div>\n                <div className=\"nav-container border-bottom\">\n                    <Link to=\"/list\">\n                        <span className=\"font-sm\">마이페이지 <span className=\"ml-10\"> > </span></span>\n                    </Link>\n                </div>\n                <div className=\"nav-container\">\n                    <span className=\"font-sm nav-logout cursor-pointer\" onClick={this.onLogout}>로그아웃</span>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Nav;","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport * as firebase from \"firebase\";\n\nimport Nav from './Nav.js';\n\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: localStorage.getItem('logInfo'),\n            isNav: true,\n        }\n    }\n\n    componentWillUpdate(nextProps, nextState, nextContext) {\n        if (nextState.user) {\n            localStorage.setItem('logInfo', nextState.user);\n        } else {\n            localStorage.removeItem('logInfo');\n        }\n    }\n\n    onLogin = (e) => {\n        e.preventDefault();\n        firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL).then(() => {\n            var provider = new firebase.auth.GoogleAuthProvider();\n            return firebase.auth().signInWithPopup(provider).then((authData) => {\n                this.setState({\n                    user: JSON.stringify(authData)\n                });\n            });\n        }).catch((error) => {\n            console.log(error);\n        });\n    }\n\n    onLogout = (e) => {\n        e.preventDefault();\n\n        firebase.auth().signOut().then(() => {\n            this.setState({\n                user: null\n            });\n        }).catch(function (error) {\n            console.log(error);\n        });\n        window.location.href = '/';\n    }\n\n    onNav = () => {\n        this.setState((prevState) => {\n            return {\n                isNav: !prevState.isNav\n            }\n        });\n    }\n\n\n    render() {\n        let userInfo = JSON.parse(localStorage.getItem('logInfo'));\n        console.log(userInfo);\n        // let nav='';\n        //\n        // if (this.state.isNav) {\n        //     nav = <Nav userInfo={userInfo.user}></Nav>;\n        // }\n\n        return (\n            <section className={`header-section header-bg`}>\n                <div className=\"header-container flex justify-center justify-between items-center\">\n                    <Link className=\"flex justify-center items-center\" to=\"/\">\n                        <img className=\"header-icon mr-10\" src={require(\"../../assets/icon/puzzle.svg\")}/>\n                        <div className=\"header-name\"><span className=\"blue\">M</span>andal-<span\n                            className=\"yellow\">A</span>RT\n                        </div>\n                    </Link>\n                    <div>\n                        {\n                            userInfo ?\n                                <>\n                                    <img className=\"cursor-pointer profile-img\" src={userInfo.user.photoURL} onClick={this.onNav}/>\n                                    {/*<span className=\"font-white cursor-pointer\" onClick={this.onLogout}>로그아웃</span>*/}\n\n                                    {\n                                        this.state.isNav ?\n\n                                        <Nav userInfo={userInfo.user}></Nav>\n                                        : <></>\n                                    }\n                                </>\n                                : <span className=\"font-white cursor-pointer\" onClick={this.onLogin}>로그인</span>\n                        }\n\n                    </div>\n                </div>\n            </section>\n        )\n    }\n}\n\nexport default Header;","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\n\nclass Guide extends Component {\n\n    constructor(props) {\n        super(props);\n\n    }\n\n    render() {\n        return (\n            <section className=\"mandal-section\">\n                <div className=\"h-100 bg-none flex flex-col justify-center items-center\">\n                    <div className=\"container\">\n                        <div className=\"font-md font-medium text-center mb-50\">\n                            ✏️ 만다라트 계획표 작성법\n                        </div>\n\n                        <div className=\"mandal-banner px-1 mb-50\">\n                            <div className=\"font-white font-bold mb-20\">⛔작성 시 주의사항 ⛔️</div>\n                            <p className=\"font-white font-light\">\n                                - 달성하기 어려운 목표도 안 되지만, 너무 쉬워서 동기 부여가 안 되는 것도 삼가야 합니다. (간단 명료하게 작성해야 합니다.)<br/>\n                                - 핵심목표는 담대하게 작성해야 합니다. 노력하면 이룰 수 있는 목표를 작성해야 합니다.<br/>\n                                - 세부목표는 현실적으로 작성해야 합니다.\n                            </p>\n                        </div>\n                        <div className=\"flex flex-col-m items-center mb-50\">\n                            <>\n                                <img className=\"mandal-img shadow mr-50\" src={require('../../assets/mandal.png')}/>\n                            </>\n\n                            <p className=\"px-1 font-xmd\">\n                                <span className=\"font-medium\">1.</span> <Link className=\"font-blue font-medium\" to=\"/write\">만다라트 만들기</Link>를 시작합니다.<br/><br/>\n                                <span className=\"font-medium\">2.</span> 자신의 핵심목표를 가장 중심에 적습니다.(최대 8글자)<br/><br/>\n                                <span className=\"font-medium\">3.</span> 세부목표 8칸에 핵심목표에 대한 해결점, 아이디어 등을 적습니다.<br/><br/>\n                                <span className=\"font-medium\">4.</span> 나머지 8칸에 세부목표에 대한 해결점, 아이디어 등을 적습니다.<br/><br/>\n                                <span className=\"font-medium\">5.</span> 모두 채웠다면, 나만의 만다라트 완성 💙\n                            </p>\n                        </div>\n\n                        <div className=\"text-center mb-50\">\n                            <Link to=\"/write\">\n                                <button className=\"btn write\">만다라트 만들기</button>\n                            </Link>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}\n\nexport default Guide;","import React, {Component} from 'react';\nimport {List, fromJS} from 'immutable';\nimport * as firebase from \"firebase\";\n\n\nclass Table extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: this.props.data\n        }\n    }\n\n    //props를 받아서 state를 변경할때 사용\n    componentWillReceiveProps(nextProps, nextContext) {\n        this.setState({\n            data: nextProps.data\n        });\n    }\n\n    onChange = (e, tableIndex, dataIndex) => {\n        e.preventDefault();\n        const {value} = e.target;\n\n        const data = this.state.data;\n\n        let goal;\n\n        if (tableIndex === 4) {\n            goal = data.setIn([dataIndex, tableIndex], value).setIn([tableIndex, dataIndex], value);\n        } else if (dataIndex === 4) {\n            goal = data.setIn([dataIndex, tableIndex], value).setIn([tableIndex, dataIndex], value);\n        } else {\n            goal = data.setIn([tableIndex, dataIndex], value);\n        }\n\n        this.setState({data: goal});\n        this.props.tableChange(goal);\n    }\n\n    onPlaceholder = (tableIndex, dataIndex) => {\n        if (tableIndex === 4) {\n            if (dataIndex === 4) {\n                return '핵심목표';\n            } else {\n                return '세부목표';\n            }\n        } else if (dataIndex === 4) {\n            return '세부목표';\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"grid outer-grid justify-between\">\n                {this.state.data.map((table, tableIndex) => {\n                    return (\n                        <div className=\"grid inner-grid justify-between items-center\" key={tableIndex}>\n                            {table.map((data, dataIndex) => {\n                                return (\n                                    <input\n                                        className=\"mandal-input\"\n                                        key={[dataIndex, tableIndex].join('_')}\n                                        placeholder={this.onPlaceholder(tableIndex, dataIndex)} value={data}\n                                        maxLength=\"8\"\n                                        onChange={(e) => this.onChange(e, tableIndex, dataIndex)}\n                                    />\n                                );\n                            })}\n                        </div>\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\nexport default Table;","import React, {Component} from 'react';\nimport {List,fromJS} from 'immutable';\nimport * as firebase from \"firebase\";\n\n\nclass Title extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            title:this.props.title\n        }\n    }\n    //props를 받아서 state를 변경할때 사용\n    componentWillReceiveProps(nextProps, nextContext) {\n        this.setState({\n            title:nextProps.title\n        });\n    }\n\n    onChange = (e) => {\n        e.preventDefault();\n\n        this.setState({\n            title: e.target.value\n        });\n\n        this.props.titleChange(e.target.value);\n    }\n\n    render() {\n        return (\n            <input\n                className=\"mandal-title\"\n                type=\"text\"\n                placeholder=\"제목을 입력하세요\"\n                value={this.state.title}\n                onChange={(e) => this.onChange(e)}\n            />\n        );\n    }\n}\n\nexport default Title;","import React, {useState,useEffect} from 'react';\nimport * as firebase from \"firebase\";\n\nconst Save = (props) => {\n\n    const [data,setData]=useState();\n    const [title,setTitle]=useState();\n\n\n    useEffect(()=>{\n        setTitle(props.title);\n        setData(JSON.stringify(props.data));\n    });\n\n    const onSave=(e)=>{\n        e.preventDefault();\n\n        const uid=JSON.parse(localStorage.getItem('logInfo')).user.uid;\n        const database = firebase.database();\n\n        let time=new Date();\n        let date=`${time.getFullYear()}년 ${time.getMonth()+1}월 ${time.getDate()}일 ${time.getHours()}:${time.getMinutes()}:${time.getSeconds()}`;\n\n        // console.log(mandalData);\n\n        database.ref(`mandal/${uid}/`).push({\n            title:title,\n            data: data,\n            time: date\n        });\n\n        setTimeout(()=>{\n            window.history.go(0);\n        },3000);\n    }\n\n    return (\n        <button className=\"btn save\" onClick={onSave}>저장</button>\n    );\n\n}\n\nexport default Save;","import React, {Component} from 'react';\nimport {List} from 'immutable';\n\nimport Table from '../../../components/mandal/Table';\nimport Title from '../../../components/mandal/Title';\nimport Save from '../../../components/button/Save';\n\n\nclass Write extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: '',\n            data: List([\n                    List(['', '', '', '', '', '', '', '', '']),\n                    List(['', '', '', '', '', '', '', '', '']),\n                    List(['', '', '', '', '', '', '', '', '']),\n                    List(['', '', '', '', '', '', '', '', '']),\n                    List(['', '', '', '', '', '', '', '', '']),\n                    List(['', '', '', '', '', '', '', '', '']),\n                    List(['', '', '', '', '', '', '', '', '']),\n                    List(['', '', '', '', '', '', '', '', '']),\n                    List(['', '', '', '', '', '', '', '', '']),\n                ]\n            )\n        }\n    }\n\n    titleChange=(data)=>{\n        this.setState({\n            title: data\n        });\n    }\n    tableChange = (data) => {\n        this.setState({\n            data: data\n        });\n    }\n\n    render() {\n        return (\n            <section className=\"mandal-section\">\n                <div className=\"container\">\n                    <div className=\"border-bottom px-1 mb-30\">\n                        <Title title={this.state.title} titleChange={this.titleChange}> </Title>\n                    </div>\n                    <div className=\"mb-30\">\n                        <Table data={this.state.data} tableChange={this.tableChange}></Table>\n                    </div>\n\n                    <div className=\"text-center\">\n                        <Save title={this.state.title} data={this.state.data}></Save>\n                    </div>\n\n                </div>\n            </section>\n        );\n    }\n}\n\nexport default Write;","import React from 'react';\n\nconst Print=()=>{\n\n    const onPrint=()=>{\n        window.print();\n    }\n\n    return(\n        <button className=\"btn print\" onClick={onPrint}>프린트</button>\n    );\n\n}\n\nexport default Print;","import React,{useState,useEffect} from 'react';\nimport * as firebase from \"firebase\";\n\nconst Edit=(props)=>{\n\n    const [title,setTitle]=useState();\n    const [data,setData]=useState();\n\n\n    useEffect(()=>{\n        setTitle(props.title);\n        setData(JSON.stringify(props.data));\n    });\n\n    const onEdit=(e)=>{\n        e.preventDefault();\n\n        const uid = JSON.parse(localStorage.getItem('logInfo')).user.uid;\n        const database = firebase.database();\n\n        let time = new Date();\n        let date = `${time.getFullYear()}년 ${time.getMonth() + 1}월 ${time.getDate()}일 ${time.getHours()}:${time.getMinutes()}:${time.getSeconds()}`;\n\n        database.ref(`mandal/${uid}`).once('value', (snapshot) => {\n            let obj = snapshot.val();\n            let keyList = [];\n\n            //키값 찾기\n            for (let key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    keyList.push(key);\n                    // console.log(key);\n                }\n            }\n            // console.log(props.pageNo);\n            database.ref(`mandal/${uid}/${keyList[props.pageNo]}`).update({\n                title:title,\n                data: data,\n                time: date\n            });\n        });\n        setTimeout(()=>{\n            window.history.go(0);\n        },1000);\n    }\n\n    return(\n        <button className=\"btn edit\" onClick={onEdit}>수정</button>\n    );\n\n}\n\nexport default Edit;","import React from 'react';\nimport * as firebase from \"firebase\";\n\nconst Delete=(props)=>{\n\n    const onDelete=(e)=>{\n        e.preventDefault();\n\n        const uid = JSON.parse(localStorage.getItem('logInfo')).user.uid;\n        const database = firebase.database();\n\n        database.ref(`mandal/${uid}`).once('value', (snapshot) => {\n            let obj = snapshot.val();\n            let keyList = [];\n\n            //키값 찾기\n            for (let key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    keyList.push(key);\n                    // console.log(key);\n                }\n            }\n            console.log(keyList[props.pageNo]);\n            //삭제\n            database.ref(`mandal/${uid}/${keyList[props.pageNo]}`).remove();\n        });\n        setTimeout(()=>{\n            window.location.href='/list';\n        },1000);\n    }\n    return(\n        <button className=\"btn delete\" onClick={onDelete}>삭제</button>\n    );\n\n}\n\nexport default Delete;","import React, {Component} from 'react';\nimport * as firebase from \"firebase\";\n\nimport {List, fromJS} from 'immutable';\n\nimport Table from '../../../components/mandal/Table';\nimport Print from \"../../../components/button/Print\";\nimport Edit from \"../../../components/button/Edit\";\nimport Delete from \"../../../components/button/Delete\";\nimport Title from \"../../../components/mandal/Title\";\n\n\nclass Detail extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: '',\n            data: List([\n                    List(['', '', '', '', '', '', '', '', '']),\n                    List(['', '', '', '', '', '', '', '', '']),\n                    List(['', '', '', '', '', '', '', '', '']),\n                    List(['', '', '', '', '', '', '', '', '']),\n                    List(['', '', '', '', '', '', '', '', '']),\n                    List(['', '', '', '', '', '', '', '', '']),\n                    List(['', '', '', '', '', '', '', '', '']),\n                    List(['', '', '', '', '', '', '', '', '']),\n                    List(['', '', '', '', '', '', '', '', '']),\n                ]\n            )\n        }\n    }\n\n    componentDidMount() {\n        let uid = JSON.parse(localStorage.getItem('logInfo')).user.uid;\n        let database = firebase.database();\n\n        const dataList = [];\n\n        database.ref(`/mandal/${uid}`).once('value').then((snapshot) => {\n            const obj = snapshot.val();\n            for (let key in snapshot.val()) {\n                dataList.push(obj[key]);\n            }\n            this.setState({\n                title: dataList[this.props.match.params.id].title,\n                data: fromJS(JSON.parse(dataList[this.props.match.params.id].data))\n            });\n        });\n\n    }\n\n    // onEdit = () => {\n    //     const uid = JSON.parse(localStorage.getItem('logInfo')).user.uid;\n    //     let database = firebase.database();\n    //\n    //     let time = new Date();\n    //     let date = `${time.getFullYear()}년 ${time.getMonth() + 1}월 ${time.getDate()}일 ${time.getHours()}:${time.getMinutes()}:${time.getSeconds()}`;\n    //\n    //     database.ref(`mandal/${uid}`).once('value', (snapshot) => {\n    //         const obj = snapshot.val();\n    //         const keyList = [];\n    //\n    //         //키값 찾기\n    //         for (let key in obj) {\n    //             if (obj.hasOwnProperty(key)) {\n    //                 keyList.push(key);\n    //                 // console.log(key);\n    //             }\n    //         }\n    //         // console.log(keyList);\n    //         database.ref(`mandal/${uid}/${keyList[this.props.match.params.id]}`).update({\n    //             data: JSON.stringify(this.state.data),\n    //             time: date\n    //         });\n    //     });\n    // }\n\n    // onDelete = (e) => {\n    //     const uid = JSON.parse(localStorage.getItem('logInfo')).user.uid;\n    //\n    //     let database = firebase.database();\n    //\n    //     database.ref(`mandal/${uid}`).once('value', (snapshot) => {\n    //         const obj = snapshot.val();\n    //         const keyList = [];\n    //\n    //         //키값 찾기\n    //         for (let key in obj) {\n    //             if (obj.hasOwnProperty(key)) {\n    //                 keyList.push(key);\n    //                 // console.log(key);\n    //             }\n    //         }\n    //         // console.log(keyList);\n    //         database.ref(`mandal/${uid}/${keyList[this.props.match.params.id]}`).remove();\n    //     });\n    //     window.location.href='/list';\n    // }\n    // onChange = (e) => {\n    //     e.preventDefault();\n    //     this.setState({\n    //         title:e.target.value\n    //     });\n    // }\n\n    titleChange = (data) => {\n        this.setState({\n            title: data\n        });\n    }\n\n    tableChange = (data) => {\n        this.setState({\n            data: data\n        });\n    }\n\n    render() {\n        return (\n            <section className=\"mandal-section\">\n                <div className=\"container\">\n                    <div className=\"border-bottom px-1 mb-30\">\n                        <Title title={this.state.title} titleChange={this.titleChange}> </Title>\n                    </div>\n                    \n                    <div className=\"mb-30\">\n                        <Table data={this.state.data} tableChange={this.tableChange}></Table>\n                    </div>\n\n                    <div className=\"text-center flex justify-between\">\n                        <Edit title={this.state.title} data={this.state.data} pageNo={this.props.match.params.id}></Edit>\n                        <Delete pageNo={this.props.match.params.id}></Delete>\n                        <Print></Print>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n\n}\n\nexport default Detail;","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport Edit from '../button/Edit';\nimport Delete from '../button/Delete';\n\n\nclass List extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            index: this.props.index,\n            data: this.props.data\n        }\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        this.setState({\n            index: nextProps.index,\n            data: nextProps.data\n        })\n    }\n\n    render() {\n        return (\n\n            <Link to={`/detail/${this.state.index}`} key={this.state.index}>\n                <div className=\"px-1 flex items-center justify-between border-bottom\">\n                    <div>\n                        <div className=\"font-md mb-5\">{this.state.data.title}</div>\n                        <div className=\"font-sm font-gray\">{this.state.data.time} 작성</div>\n                    </div>\n                    <div>\n                        <Delete pageNo={this.state.index}></Delete>\n                    </div>\n                </div>\n            </Link>\n        )\n    }\n}\n\nexport default List;\n","import React, {Component} from 'react';\nimport * as firebase from \"firebase\";\nimport List from '../../../components/mandal/List.js';\n\nclass ListContainer extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            list: []\n        }\n    }\n\n    componentWillMount() {\n        let uid = JSON.parse(localStorage.getItem('logInfo')).user.uid;\n\n        let database = firebase.database();\n\n        const mandalList = [];\n\n        // database.ref(`/mandal/${uid}`).on('child_added', (snapshot)=> {\n        //     mandalList.push(snapshot.val());\n        //\n        //     this.setState({\n        //         list: mandalList\n        //     });\n        // });\n\n\n        database.ref(`/mandal/${uid}`).once('value').then((snapshot) => {\n            const obj = snapshot.val();\n\n            const arr = [];\n\n            for (let key in obj) {\n                arr.push(obj[key]);\n            }\n            this.setState({\n                list: arr\n            });\n        });\n    }\n\n    render() {\n        let userInfo = JSON.parse(localStorage.getItem('logInfo'));\n        return (\n            <section>\n\n                <div className=\"mandal-section\">\n                    <div className=\"container\">\n                        <div className=\"mandal-banner flex justify-between items-center mb-50\">\n                            <div className=\"font-lg font-white\">\n                                나만의 <span className=\"yellow\">만다라트</span>로<br/>\n                                인생을 즐겁게!\n                            </div>\n                            <div className=\"flex flex-col\">\n                                <span className=\"font-lg text-center  font-white\">{userInfo.user.displayName}</span>\n                                <span className=\"font-white\">{userInfo.user.email}</span>\n                            </div>\n                        </div>\n                        <div className=\"mandal-list flex flex-col\">\n                            {\n                                this.state.list.length!==0 ?\n                                    this.state.list.map((data, index) => {\n                                        return (\n                                            <List key={index} data={data} index={index}></List>\n                                        );\n                                    })\n                                    :\n                                    <div className=\"px-1 text-center\">\n                                        <img src={require('../../../assets/nothing.jpeg')}/>\n                                    </div>\n                            }\n                        </div>\n                    </div>\n                </div>\n\n\n            </section>\n        )\n    }\n}\n\nexport default ListContainer;\n","import {Map} from 'immutable';\n\n//액션 이\nconst LOGIN = 'LOGIN';\nconst LOGOUT = 'LOGOUT';\n\n//\nexport const login ={\n    type: LOGIN\n};\nexport const logout ={\n    type: LOGOUT\n};\n\nexport const initialState = {\n    user: null\n};\n\n//리듀서\nconst handleActions = (state = initialState, action) => {\n    switch (action.type) {\n        case LOGIN:\n            return {\n                user: action.user,\n            };\n            break;\n        case LOGOUT:\n            return {\n                user: action.user,\n            };\n            break;\n        default:\n            return state;\n    }\n};\n\nexport default handleActions;","import React, {Component} from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\n\nimport Home from './pages/home/Home';\n\nimport Login from './pages/auth/Login.js';\nimport Logout from './pages/auth/Logout.js';\n\nimport Header from './components/header/Header';\n\nimport Guide from './pages/guide/Guide';\n\nimport Write from \"./pages/mandal/write/Index\";\nimport Detail from \"./pages/mandal/detail/Index\";\nimport List from \"./pages/mandal/list/Index\";\n\n// Redux 관련 불러오기\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport reducers from './redux/actions';\n\n// 스토어 생성\nconst store = createStore(reducers);\n\nclass App extends Component {\n\n    // initializeUserInfo=async()=>{\n    //     if(!localStorage.getItem('logInfo')){\n    //         window.location.href='/auth';\n    //     }\n    // }\n    //\n    // componentDidMount(){\n    //     this.initializeUserInfo();\n    // }\n\n    render() {\n        return (\n            <Provider store={store}>\n                <BrowserRouter basename={process.env.PUBLIC_URL}>\n                    <Header/>\n\n                    <Route exact path=\"/login\" component={Login}/>\n                    <Route exact path=\"/logout\" component={Logout}/>\n\n                    <Route exact path=\"/\" component={Home}/>\n                    <Route path=\"/write\" component={Write}/>\n\n                    <Route path=\"/guide\" component={Guide}/>\n\n\n                    <Switch>\n                        <Route path=\"/detail/:id\" component={Detail}/>\n                    </Switch>\n                    <Route path=\"/list\" component={List}></Route>\n                </BrowserRouter>\n            </Provider>\n        );\n    };\n}\n\nexport default App;\n","import * as firebase from \"firebase\";\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyA_cUj1Wy83xmB7bLbxsv-WK3g3dyDy55Q\",\n    authDomain: \"mandal-art-deadf.firebaseapp.com\",\n    databaseURL: \"https://mandal-art-deadf.firebaseio.com\",\n    projectId: \"mandal-art-deadf\",\n    storageBucket: \"mandal-art-deadf.appspot.com\",\n    messagingSenderId: \"34230846838\",\n    appId: \"1:34230846838:web:c1ed228641cb87b1eda657\",\n    measurementId: \"G-CL0CFLEEVV\"\n};\n\nconst firebaseApp=firebase.initializeApp(firebaseConfig);\n\nexport default firebaseApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './App';\nimport './css/_Style.scss';\n\nimport firebaseApp from \"./firebaseApp\";\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}